// explainer.h
//
// Generate structured explanations for code changes.  An explanation
// contains high‑level text justifying the change along with risk and
// backout instructions.  This module provides a deterministic,
// rule‑based explainer; integration with a language model is left to
// the caller.  The return value includes a provenance object so that
// consumers can see whether the explanation was generated by the rule
// based fallback or an external provider.

#ifndef EXPLAINER_H
#define EXPLAINER_H

#include <nlohmann/json.hpp>
#include "change_audit.h"

namespace explainer {

// Produce a JSON explanation for the given report.  The
// implementation uses a simple set of heuristics to describe added
// and removed definitions.  The returned object contains the keys:
// `why`, `risk`, `backout`, `tests`, `touched_symbols` and
// `provenance`.  See explainer.cpp for details.
nlohmann::json generate_explanation(const change_audit::Report &report);

} // namespace explainer

#endif // EXPLAINER_H